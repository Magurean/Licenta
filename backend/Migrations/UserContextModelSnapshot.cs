// <auto-generated />
using System;
using BackendLicenta.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendLicenta.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendLicenta.Context.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Game2048Score")
                        .HasColumnType("int");

                    b.Property<int>("MinesweeperScoreEasy")
                        .HasColumnType("int");

                    b.Property<int>("MinesweeperScoreHard")
                        .HasColumnType("int");

                    b.Property<int>("MinesweeperScoreMedium")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WordleGamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("WordleGamesWon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c95696b-b7cf-41af-8ca2-374606cc8b10"),
                            Game2048Score = 1,
                            MinesweeperScoreEasy = 1,
                            MinesweeperScoreHard = 5,
                            MinesweeperScoreMedium = 3,
                            Password = "test",
                            Username = "Alex",
                            WordleGamesPlayed = 20,
                            WordleGamesWon = 6
                        },
                        new
                        {
                            Id = new Guid("47f14c82-2a30-475c-9d53-e4236d3a1185"),
                            Game2048Score = 24,
                            MinesweeperScoreEasy = 3,
                            MinesweeperScoreHard = 5,
                            MinesweeperScoreMedium = 5,
                            Password = "test",
                            Username = "Andrei",
                            WordleGamesPlayed = 56,
                            WordleGamesWon = 55
                        },
                        new
                        {
                            Id = new Guid("04f63577-77bd-4f62-8314-ffe633000949"),
                            Game2048Score = 25,
                            MinesweeperScoreEasy = 3,
                            MinesweeperScoreHard = 2,
                            MinesweeperScoreMedium = 7,
                            Password = "test",
                            Username = "John",
                            WordleGamesPlayed = 25,
                            WordleGamesWon = 25
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
